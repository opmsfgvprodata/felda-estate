@model IEnumerable<MVC_SYSTEM.Models.sp_YieldBracketTable_Result>
@using MVC_SYSTEM.Class;

@{
    ViewBag.Title = "YieldBracketDetails";
    //Layout = "~/Views/Shared/_LayoutMain.cshtml";
    System.Globalization.DateTimeFormatInfo mfi = new System.Globalization.DateTimeFormatInfo();
    GetConfig GetConfig = new GetConfig();
    var monthname = "";
    decimal? HasilSum = 0;
    decimal HargaManual = 0;
    decimal HargaMesin = 0;
    decimal PurataLuas = 0;
    decimal ViewbagPurata = ViewBag.JumlahPurata;
    decimal JumlahPurata = decimal.Parse(ViewbagPurata.ToString("0.00"));
    var levelName = ""; decimal KiraPurata = 0;
    decimal jumlahPurata = 0;
}

@if (Model.Count() > 0)
{
    <div id="scrollArea">
        <logo />
        <table class="table table-bordered" style="font-size: 11px;" border="0" id="tblSample">
            <thead>
                <tr>
                    <th colspan="10" style="text-align:center;vertical-align:middle;">
                        @ViewBag.NamaSyarikat
                        <br />
                        (@GlobalResEstate.lblCompanyNo : @ViewBag.NoSyarikat)
                        <br />
                        @GlobalResEstate.lblYieldBracket
                    </th>
                </tr>
                <tr>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.lblLevel</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.lblNamaPkt</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.lblYear</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.lblMonth</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.hdrOutcome (Tan)</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.hdrTotalOutcome (Tan)</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.lblArea (Hek)</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.hdrTotalOutcome (Tan/Hek)</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.lblTotal @GlobalResEstate.hdrTotalOutcome (Tan/Hek)</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.hdrManualValue</th>
                    <th bgcolor="#ffcc80" style="color: black; text-align: center; vertical-align: middle !important; border: 1px solid black;" border="1">@GlobalResEstate.hdrMachineValue</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var kod in Model.Select(s => s.fldKod).Distinct())
                {
                    jumlahPurata = 0;
                    int totalmonth = Model.Where(x => x.fldKod == kod).Select(s => s.fldBulan).Count();
                    if (totalmonth == 12)
                    {
                        foreach (var item in Model.Where(x => x.fldKod == kod))
                        {
                            KiraPurata = (item.fldHasilTan.Value / item.fldLuasHektar.Value);
                            jumlahPurata = jumlahPurata + Math.Round(KiraPurata, 2);

                        }
                        foreach (var item in Model.Where(x => x.fldKod == kod))
                        {
                            monthname = mfi.GetAbbreviatedMonthName(Convert.ToInt32(item.fldBulan));
                            HasilSum = Model.Where(x => x.fldKod == kod).Select(s => s.fldHasilTan).Sum();
                            HargaManual = GetConfig.UpahManual(jumlahPurata, item.fldNegaraID, item.fldSyarikatID).Value;
                            HargaMesin = GetConfig.UpahMesin(jumlahPurata, item.fldNegaraID, item.fldSyarikatID).Value;
                            PurataLuas = (item.fldHasilTan.Value / item.fldLuasHektar.Value);

                            levelName = GetConfig.GetPktName(item.fldKod, item.fldNegaraID, item.fldSyarikatID, item.fldWilayahID, item.fldLadangID);

                            if (String.IsNullOrEmpty(levelName))
                            {
                                levelName = GetConfig.GetSubPktName(item.fldKod, item.fldNegaraID, item.fldSyarikatID, item.fldWilayahID, item.fldLadangID);
                            }

                            if (String.IsNullOrEmpty(levelName))
                            {
                                levelName = GetConfig.GetBlokName(item.fldKod, item.fldNegaraID, item.fldSyarikatID, item.fldWilayahID, item.fldLadangID);
                            }


                            <tr>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @item.fldKod
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @levelName
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @item.fldTahun
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @monthname
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @item.fldHasilTan
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @HasilSum
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @item.fldLuasHektar
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @PurataLuas.ToString("0.00")
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @jumlahPurata
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @HargaManual
                                </td>
                                <td align="center" style="vertical-align: middle !important; border: 1px solid black;" border="1">
                                    @HargaMesin
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
        <newpage />
    </div>
    //added by Mas on 04.06.2020 :tambah button print
    //*
    if (ViewBag.Print == null)
    {
        <div style="text-align:right; margin-top:10px">
            <a class="btn btn-default btn-sm" href="#" id="printpage">
                <span class="glyphicon glyphicon-print"> </span> @GlobalResEstate.btnPrint
            </a>
            <a class="btn btn-default btn-sm" href="#" id="downloadpdf">
                <span><img src="~/Asset/Images/pdf-icon.png" width="20px" height="20px" /></span> @GlobalResEstate.btnDownloadPdf
            </a>
        </div>
    }
    //*
}
else
{
    <p style="color:red">@GlobalResEstate.msgErrorSearch</p>
}


<script>
    //function MergeCommonRows($('#tblSample')) {
    var firstColumnBrakes = [];
    // iterate through the columns instead of passing each column as function parameter:
    for (var i = 1; i <= $('#tblSample').find('th').length; i++) {
        var previous = null, cellToExtend = null, rowspan = 1;
        $('#tblSample').find("td:nth-child(" + i + ")").each(function (index, e) {
            if (i !== 3 && i !== 4 && i !== 6 && i !== 7) {
                console.log(i);
                var jthis = $(this), content = jthis.text();
                // check if current row "break" exist in the array. If not, then extend rowspan:
                if (previous == content && content !== "" && $.inArray(index, firstColumnBrakes) === -1) {
                    // hide the row instead of remove(), so the DOM index won't "move" inside loop.
                    jthis.addClass('hidden');
                    cellToExtend.attr("rowspan", (rowspan = rowspan + 1));
                } else {
                    // store row breaks only for the first column:
                    if (i === 1) firstColumnBrakes.push(index);
                    rowspan = 1;
                    previous = content;
                    cellToExtend = jthis;
                }
            }

        });
    }
    // now remove hidden td's (or leave them hidden if you wish):
    $('td.hidden').remove();
    //}

    // added by mas on 04.06.2020 : add function print
    //*
    $(document).ready(function () {
        $("#printpage").click(function () {
            var DivElement = document.getElementById("scrollArea").innerHTML;
            var oldPage = document.body.innerHTML;
            document.body.innerHTML = DivElement;
            window.print();
            document.body.innerHTML = oldPage;
        })

        $("#downloadpdf").click(function () {
            //var RadioGroup = $('input[name=RadioGroup]:checked').val();
            //var MonthList = $("#MonthList").val();
            //var YearList = $("#YearList").val();
            var GroupList = $("#GroupList").val();
            //var StatusList = $("#StatusList").val();
            //var WorkCategoryList = $("#WorkCategoryList").val();

            //var StatusList = '';
            //var WorkCategoryList = '';

            var param = '/?GroupList=' + GroupList;
            var controller = 'Report';
            var action = 'PrintGrpWorkerPdf';

            var ajxfn = {};
            ajxfn.url = "@Url.Action("PDFIndetifier", "PdfCreator")";
            ajxfn.type = "POST";
            ajxfn.data = JSON.stringify({ controller: controller, action: action, param: param });
            ajxfn.datatype = "json";
            ajxfn.contentType = "application/json";
            ajxfn.success = function (result) {
                //var win = window.open(result.link, '_blank');
                //win.focus();
                PDFObject.embed(result.link, "#searchGrpWork", { height: "450px" });
            };

            ajxfn.error = function () {
                $.simplyToast('@GlobalResEstate.msgError', 'danger');
                $("#UpdateProgress1").css("display", "none");
            };
            $.ajax(ajxfn);

            return false;
        });
    });
    //*
</script>
